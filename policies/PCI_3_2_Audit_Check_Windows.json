{
    "policy": {
        "name": "pci_32_audit_checks_--_windows",
        "short_description": "PCI 3.2 Audit Checks -- Windows",
        "description": null,
        "settings": {
            "tests": {
                "output_format": null
            }
        },
        "operating_system_family_id": null,
        "operating_system_id": null,
        "type": null
    },
    "data": [
        {
            "10.1 Implement audit trails to link all access to system components to each individual user.": [
                {
                    "id": "10-1-Implement-audit-trails-to-link-all-access-to-system-components-to-each-individual-user-17-3-1-Ensure-Audit-PNP-Activity-is-set-to-Success-",
                    "name": "17.3.1 Ensure 'Audit PNP Activity' is set to 'Success'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Plug and Play Events": [
                            {
                                "exp": "Success",
                                "check": "equals",
                                "expected": "Success",
                                "background": "This policy setting allows you to audit when plug and play detects an external device. The recommended state for this setting is: Success .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Detailed Tracking\\Audit PNP Activity"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.3.2 (L1) Ensure 'Audit Process Creation' is set to 'Success'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Plug and Play\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.3.1 Ensure 'Audit PNP Activity' is set to 'Success'"
                    },
                    "selectList": [
                        "*"
                    ],
                    "description": "17.3.1 Ensure 'Audit PNP Activity' is set to 'Success'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-1-Implement-audit-trails-to-link-all-access-to-system-components-to-each-individual-user-17-3-2-Ensure-Audit-Process-Creation-is-set-to-Success-",
                    "name": "17.3.2 Ensure 'Audit Process Creation' is set to 'Success'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Process Creation": [
                            {
                                "exp": "Success",
                                "check": "equals",
                                "expected": "Success",
                                "background": "This subcategory reports the creation of a process and the name of the program or user that created it. Events for this subcategory include:\n1. 4688: A new process has been created.\n2. 4696: A primary token was assigned to process.",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Detailed Tracking\\Audit Process Creation"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "The output of the PowerShell query {{ query }} should contain the specified value17.3.2 (L1) Ensure 'Audit Process Creation' is set to 'Success'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Process Creation\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.3.2 Ensure 'Audit Process Creation' is set to 'Success'"
                    },
                    "description": "17.3.2 Ensure 'Audit Process Creation' is set to 'Success'",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "10.2.4 Verify invalid logical access attempts are logged.": [
                {
                    "id": "10-2-4-Verify-invalid-logical-access-attempts-are-logged-17-2-4-Ensure-Audit-Other-Account-Management-Events-is-set-to-Success-and-Failure-",
                    "name": "17.2.4 Ensure 'Audit Other Account Management Events' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Other Account Management Events": [
                            {
                                "exp": "Success and Failure",
                                "check": "equals",
                                "expected": "Success and Failure",
                                "background": "This subcategory reports other account management events. Events for this subcategory include:\n4782: The password hash an account was accessed.\n4793: The Password Policy Checking API was called.",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure:\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit Other Account Management Events"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.2.4 Ensure 'Audit Other Account Management Events' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Other Account Management Events\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.2.4 Ensure 'Audit Other Account Management Events' is set to 'Success and Failure'"
                    },
                    "description": "17.2.4 Ensure 'Audit Other Account Management Events' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-4-Verify-invalid-logical-access-attempts-are-logged-17-5-1-Ensure-Audit-Account-Lockout-is-set-to-Success-and-Failure-",
                    "name": "17.5.1 Ensure 'Audit Account Lockout' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Account Lockout": [
                            {
                                "exp": "Success and Failure",
                                "check": "equals",
                                "expected": "Success and Failure",
                                "background": "This subcategory reports when a user's account is locked out as a result of too many failed logon attempts. Events for this subcategory include:\n4625: An account failed to log on.\nThe recommended state for this setting is: Success and Failure .",
                                "absent_pass": false,
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Logon/Logoff\\Audit Account Lockout"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.5.1 Ensure 'Audit Account Lockout' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Account Lockout\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.5.1 Ensure 'Audit Account Lockout' is set to 'Success and Failure'"
                    },
                    "description": "17.5.1 Ensure 'Audit Account Lockout' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "10.2.5 Use of and changes to identification and authentication mechanisms—including but not limited to creation of new accounts and elevation of privileges—and all changes, additions, or deletions to accounts with root or administrative privileges": [
                {
                    "id": "10-2-5-Use-of-and-changes-to-identification-and-authentication-mechanisms-including-but-not-limited-to-creation-of-new-accounts-and-elevation-of-privileges-and-all-changes-additions-or-deletions-to-accounts-with-root-or-administrative-privileges17-2-2-Ensure-Audit-Computer-Account-Management-is-set-to-Success-and-Failure-",
                    "name": "17.2.2 Ensure 'Audit Computer Account Management' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Computer Account Management": [
                            {
                                "exp": "Success and Failure",
                                "check": "equals",
                                "expected": "Success and Failure",
                                "background": "This subcategory reports each event of computer account management, such as when a computer account is created, changed, deleted, renamed, disabled, or enabled. Events for this subcategory include:\n4741: A computer account was created.\n4742: A computer account was changed.\n4743: A computer account was deleted.\nThe recommended state for this setting is: Success and Failure .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit Computer Account Management"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.2.2 Ensure 'Audit Computer Account Management' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Computer Account Management\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.2.2 Ensure 'Audit Computer Account Management' is set to 'Success and Failure'"
                    },
                    "description": "17.2.2 Ensure 'Audit Computer Account Management' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-5-Use-of-and-changes-to-identification-and-authentication-mechanisms-including-but-not-limited-to-creation-of-new-accounts-and-elevation-of-privileges-and-all-changes-additions-or-deletions-to-accounts-with-root-or-administrative-privileges17-2-6-Ensure-Audit-User-Account-Management-is-set-to-Success-and-Failure-",
                    "name": "17.2.6 Ensure 'Audit User Account Management' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "User Account Management": [
                            {
                                "exp": "Success and Failure",
                                "check": "equals",
                                "expected": "Success and Failure",
                                "background": "This subcategory reports each event of user account management, such as when a user account is created, changed, or deleted; a user account is renamed, disabled, or enabled; or a password is set or changed. If you enable this Audit policy setting, administrators can track events to detect malicious, accidental, and authorized creation of user accounts. Events for this subcategory include:\n4720: A user account was created.\n4722: A user account was enabled.\n4723: An attempt was made to change an account's password.\n4724: An attempt was made to reset an account's password.\n4725: A user account was disabled.\n4726: A user account was deleted.\n4738: A user account was changed.\n4740: A user account was locked out.\n4765: SID History was added to an account.\n4766: An attempt to add SID History to an account failed.\n4767: A user account was unlocked.\n4780: The ACL was set on accounts which are members of administrators groups.\n4781: The name of an account was changed:\n4794: An attempt was made to set the Directory Services Restore Mode.\n5376: Credential Manager credentials were backed up.\n5377: Credential Manager credentials were restored from a backup.\nThe recommended state for this setting is: Success and Failure ."
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.2.6 Ensure 'Audit User Account Management' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"User Account Management\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.2.6 Ensure 'Audit User Account Management' is set to 'Success and Failure'"
                    },
                    "description": "17.2.6 Ensure 'Audit User Account Management' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-5-Use-of-and-changes-to-identification-and-authentication-mechanisms-including-but-not-limited-to-creation-of-new-accounts-and-elevation-of-privileges-and-all-changes-additions-or-deletions-to-accounts-with-root-or-administrative-privileges17-5-2-L1-Ensure-Audit-Group-Membership-is-set-to-Success-",
                    "name": "17.5.2 (L1) Ensure 'Audit Group Membership' is set to 'Success'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Group Membership": [
                            {
                                "exp": "Success",
                                "check": "equals",
                                "expected": "Success",
                                "background": "This policy allows you to audit the group membership information in the user’s logon token. Events in this subcategory are generated on the computer on which a logon session is created. For an interactive logon, the security audit event is generated on the computer that the user logged on to. For a network logon, such as accessing a shared folder on the network, the security audit event is generated on the computer hosting the resource. The recommended state for this setting is: Success .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Logon/Logoff\\Audit Group Membership"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.5.2"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Group Membership\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.5.2 (L1) Ensure 'Audit Group Membership' is set to 'Success'"
                    },
                    "description": "17.5.2 (L1) Ensure 'Audit Group Membership' is set to 'Success'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-5-Use-of-and-changes-to-identification-and-authentication-mechanisms-including-but-not-limited-to-creation-of-new-accounts-and-elevation-of-privileges-and-all-changes-additions-or-deletions-to-accounts-with-root-or-administrative-privileges17-5-3-L1-Ensure-Audit-Logoff-is-set-to-Success-",
                    "name": "17.5.3 (L1) Ensure 'Audit Logoff' is set to 'Success'",
                    "error": false,
                    "checks": {
                        "Logoff": [
                            {
                                "exp": "Success",
                                "check": "equals",
                                "expected": "Success",
                                "background": "This subcategory reports when a user logs off from the system. These events occur on the accessed computer. For interactive logons, the generation of these events occurs on the computer that is logged on to. If a network logon takes place to access a share, these events generate on the computer that hosts the accessed resource. If you configure this setting to No auditing, it is difficult or impossible to determine which user has accessed or attempted to access organization computers. Events for this subcategory include:\n4634: An account was logged off.\n4647: User initiated logoff.\nThe recommended state for this setting is: Success .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Logon/Logoff\\Audit Logoff"
                            }
                        ],
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.5.3"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Logoff \";  $APolicyOutput= (Invoke-Expression \"auditpol /get /subcategory:$APolicySetting\") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.5.3 (L1) Ensure 'Audit Logoff' is set to 'Success'"
                    },
                    "description": "17.5.3 (L1) Ensure 'Audit Logoff' is set to 'Success'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-5-Use-of-and-changes-to-identification-and-authentication-mechanisms-including-but-not-limited-to-creation-of-new-accounts-and-elevation-of-privileges-and-all-changes-additions-or-deletions-to-accounts-with-root-or-administrative-privileges17-5-4-L1-Ensure-Audit-Logon-is-set-to-Success-and-Failure-",
                    "name": "17.5.4 (L1) Ensure 'Audit Logon' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "Logon": [
                            {
                                "check": "equals",
                                "expected": "Success and Failure",
                                "valueSelectList": null,
                                "attributeSelectList": null,
                                "availableAttributes": null
                            },
                            {
                                "name": "Logon",
                                "path": [
                                    "10.2.5 Use of and changes to identification and authentication mechanisms—including but not limited to creation of new accounts and elevation of privileges—and all changes, additions, or deletions to accounts with root or administrative privileges",
                                    "17.5.4 (L1) Ensure 'Audit Logon' is set to 'Success and Failure'"
                                ],
                                "check": "equals",
                                "background": "This subcategory reports when a user attempts to log on to the system. These events occur on the accessed computer. For interactive logons, the generation of these events occurs on the computer that is logged on to. If a network logon takes place to access a share, these events generate on the computer that hosts the accessed resource. If you configure this setting to No auditing, it is difficult or impossible to determine which user has accessed or attempted to access organization computers. Events for this subcategory include:\n4624: An account was successfully logged on.\n4625: An account failed to log on.\n4648: A logon was attempted using explicit credentials.\n4675: SIDs were filtered.\nThe recommended state for this setting is: Success and Failure .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Logon/Logoff\\Audit Logon"
                            }
                        ],
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.5.4"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Logon \";  $APolicyOutput= (Invoke-Expression \"auditpol /get /subcategory:$APolicySetting\") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.5.4 (L1) Ensure 'Audit Logon' is set to 'Success and Failure'"
                    },
                    "description": "17.5.4 (L1) Ensure 'Audit Logon' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-5-Use-of-and-changes-to-identification-and-authentication-mechanisms-including-but-not-limited-to-creation-of-new-accounts-and-elevation-of-privileges-and-all-changes-additions-or-deletions-to-accounts-with-root-or-administrative-privileges17-2-3-Ensure-Audit-Distribution-Group-Management-is-set-to-Success-and-Failure-",
                    "name": "17.2.3 Ensure 'Audit Distribution Group Management' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Distribution Group Management": [
                            {
                                "exp": "Success and Failure",
                                "check": "equals",
                                "expected": "Success and Failure",
                                "background": "This subcategory reports each event of distribution group management, such as when a distribution group is created, changed, or deleted or when a member is added to or removed from a distribution group. If you enable this Audit policy setting, administrators can track events to detect malicious, accidental, and authorized creation of group accounts.Events for this subcategory include:\n4744: A security-disabled local group was created.\n4745: A security-disabled local group was changed.\n4746: A member was added to a security-disabled local group.\n4747: A member was removed from a security-disabled local group.\n4748: A security-disabled local group was deleted.\n4749: A security-disabled global group was created.\n4750: A security-disabled global group was changed.\n4751: A member was added to a security-disabled global group.\n4752: A member was removed from a security-disabled global group.\n4753: A security-disabled global group was deleted.\n4759: A security-disabled universal group was created.\n4760: A security-disabled universal group was changed.\n4761: A member was added to a security-disabled universal group.\n4762: A member was removed from a security-disabled universal group.\n4763: A security-disabled universal group was deleted.\nThe recommended state for this setting is: Success and Failure .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit Distribution Group Management"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.2.3 Ensure 'Audit Distribution Group Management' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Distribution Group Management\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.2.3 Ensure 'Audit Distribution Group Management' is set to 'Success and Failure'"
                    },
                    "description": "17.2.3 Ensure 'Audit Distribution Group Management' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-5-Use-of-and-changes-to-identification-and-authentication-mechanisms-including-but-not-limited-to-creation-of-new-accounts-and-elevation-of-privileges-and-all-changes-additions-or-deletions-to-accounts-with-root-or-administrative-privileges17-2-5-Ensure-Audit-Security-Group-Management-is-set-to-Success-and-Failure-",
                    "name": "17.2.5 Ensure 'Audit Security Group Management' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Security Group Management": [
                            {
                                "exp": "Success and Failure",
                                "check": "equals",
                                "expected": "Success and Failure",
                                "background": "This subcategory reports each event of security group management, such as when a security group is created, changed, or deleted or when a member is added to or removed from a security group. If you enable this Audit policy setting, administrators can track events to detect malicious, accidental, and authorized creation of security group accounts. Events for this subcategory include: \n4727: A security-enabled global group was created.\n4728: A member was added to a security-enabled global group.\n4729: A member was removed from a security-enabled global group.\n4730: A security-enabled global group was deleted.\n4731: A security-enabled local group was created.\n4732: A member was added to a security-enabled local group.\n4733: A member was removed from a security-enabled local group.\n4734: A security-enabled local group was deleted.\n4735: A security-enabled local group was changed.\n4737: A security-enabled global group was changed.\n4754: A security-enabled universal group was created.\n4755: A security-enabled universal group was changed.\n4756: A member was added to a security-enabled universal group.\n4757: A member was removed from a security-enabled universal group.\n4758: A security-enabled universal group was deleted.\n4764: A group's type was changed.\nThe recommended state for this setting is: Success and Failure .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit Security Group Management"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.2.5 Ensure 'Audit Security Group Management' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Security Group Management\"; $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting; $obj = New-Object psobject; if ($APolicyOutput){ $APolicyOutput -match ' ([a-z, /-]+) ([a-z, ]+)' | Out-Null; $APolicyStatus= $Matches[2]; $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus; } else { $obj | add-member -Type Noteproperty -Name $APolicySetting -Value \"Setting does not exists\";} $obj;",
                        "description": "17.2.5 Ensure 'Audit Security Group Management' is set to 'Success and Failure'"
                    },
                    "description": "17.2.5 Ensure 'Audit Security Group Management' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-5-Use-of-and-changes-to-identification-and-authentication-mechanisms-including-but-not-limited-to-creation-of-new-accounts-and-elevation-of-privileges-and-all-changes-additions-or-deletions-to-accounts-with-root-or-administrative-privileges17-5-5-L1-Ensure-Audit-Other-Logon-Logoff-Events-is-set-to-Success-and-Failure-",
                    "name": "17.5.5 (L1) Ensure 'Audit Other Logon/Logoff Events' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Other Logon/Logoff Events": [
                            {
                                "exp": "Success and Failure",
                                "check": "equals",
                                "expected": "Success and Failure",
                                "background": "This subcategory reports other logon/logoff-related events, such as Terminal Services session disconnects and reconnects, using RunAs to run processes under a different account, and locking and unlocking a workstation. Events for this subcategory include:\n4649: A replay attack was detected.\n4778: A session was reconnected to a Window Station.\n4779: A session was disconnected from a Window Station.\n4800: The workstation was locked.\n4801: The workstation was unlocked.\n4802: The screen saver was invoked.\n4803: The screen saver was dismissed.\n5378: The requested credentials delegation was disallowed by policy.\n5632: A request was made to authenticate to a wireless network.\n5633: A request was made to authenticate to a wired network.\nThe recommended state for this setting is: Success and Failure .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Logon/Logoff\\Audit Other Logon/Logoff Events"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.5.5 (L1) Ensure 'Audit Other Logon/Logoff Events' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Other Logon/Logoff Events\"; $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting; $obj = New-Object psobject; if ($APolicyOutput){ $APolicyOutput -match ' ([a-z, /-]+) ([a-z, ]+)' | Out-Null; $APolicyStatus= $Matches[2]; $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus; } else { $obj | add-member -Type Noteproperty -Name $APolicySetting -Value \"Setting does not exists\";} $obj;",
                        "description": "17.5.5 (L1) Ensure 'Audit Other Logon/Logoff Events' is set to 'Success and Failure'"
                    },
                    "description": "17.5.5 (L1) Ensure 'Audit Other Logon/Logoff Events' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "10.2.6 Initialization, stopping, or pausing of the audit logs": [
                {
                    "id": "10-2-6-Initialization-stopping-or-pausing-of-the-audit-logs17-7-1-Ensure-Audit-Audit-Policy-Change-is-set-to-Success-and-Failure-",
                    "name": "17.7.1 Ensure 'Audit Audit Policy Change' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Policy Change": {
                            "check": "equals",
                            "expected": "Success and Failure",
                            "valueSelectList": null,
                            "attributeSelectList": [
                                "User Account Management"
                            ],
                            "availableAttributes": [
                                {
                                    "User Account Management": "Success"
                                }
                            ]
                        }
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.7.1 Ensure 'Audit Audit Policy Change' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Policy Change\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.7.1 Ensure 'Audit Audit Policy Change' is set to 'Success and Failure'"
                    },
                    "description": "17.7.1 Ensure 'Audit Audit Policy Change' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-6-Initialization-stopping-or-pausing-of-the-audit-logs17-7-2-Ensure-Audit-Authentication-Policy-Change-is-set-to-Success-",
                    "name": "17.7.2 Ensure 'Audit Authentication Policy Change' is set to 'Success'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Authentication Policy Change": [
                            {
                                "check": "equals",
                                "expected": "Success",
                                "valueSelectList": [
                                    "Success"
                                ],
                                "attributeSelectList": [
                                    "Authentication Policy Change"
                                ],
                                "availableAttributes": [
                                    {
                                        "Authentication Policy Change": "Success"
                                    }
                                ]
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.7.2 Ensure 'Audit Authentication Policy Change' is set to 'Success'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Authentication Policy Change\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.7.2 Ensure 'Audit Authentication Policy Change' is set to 'Success'"
                    },
                    "description": "17.7.2 Ensure 'Audit Authentication Policy Change' is set to 'Success'",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "10.2.7 Creation and deletion of system-level objects": [
                {
                    "id": "10-2-7-Creation-and-deletion-of-system-level-objects17-4-1-Ensure-Audit-Directory-Service-Access-is-set-to-Success-and-Failure-",
                    "name": "17.4.1 Ensure 'Audit Directory Service Access' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Directory Service Access": [
                            {
                                "exp": "Success",
                                "check": "equals",
                                "expected": "Success",
                                "background": "This subcategory reports when an AD DS object is accessed. Only objects with SACLs cause audit events to be generated, and only when they are accessed in a manner that matches their SACL. These events are similar to the directory service access events in previous versions of Windows Server. This subcategory applies only to domain controllers. Events for this subcategory include:\n4662 : An operation was performed on an object.\nThe recommended state for this setting is: Success and Failure .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\DS Access\\Audit Directory Service Access"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.4.1 Ensure 'Audit Directory Service Access' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Directory Service Access\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.4.1 Ensure 'Audit Directory Service Access' is set to 'Success and Failure'"
                    },
                    "description": "17.4.1 Ensure 'Audit Directory Service Access' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "10-2-7-Creation-and-deletion-of-system-level-objects17-6-1-Ensure-Audit-Removable-Storage-is-set-to-Success-and-Failure-",
                    "name": "17.6.1 Ensure 'Audit Removable Storage' is set to 'Success and Failure'",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "Removable Storage": [
                            {
                                "exp": "Success And Failure",
                                "check": "equals",
                                "expected": "Success And Failure",
                                "background": "This policy setting allows you to audit user attempts to access file system objects on a removable storage device. A security audit event is generated only for all objects for all types of access requested. If you configure this policy setting, an audit event is generated each time an account accesses a file system object on a removable storage. Success audits record successful attempts and Failure audits record unsuccessful attempts. If you do not configure this policy setting, no audit event is generated when an account accesses a file system object on a removable storage. The recommended state for this setting is: Success and Failure .",
                                "remediation": "To establish the recommended configuration via GP, set the following UI path to Success and Failure :\nComputer Configuration\\Policies\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Object Access\\Audit Removable Storage"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "17.6.1 Ensure 'Audit Removable Storage' is set to 'Success and Failure'"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$APolicySetting=\"Removable Storage\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;",
                        "description": "17.6.1 Ensure 'Audit Removable Storage' is set to 'Success and Failure'"
                    },
                    "description": "17.6.1 Ensure 'Audit Removable Storage' is set to 'Success and Failure'",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "Policy Version": [
                {
                    "name": "[PCI: Server-Hardening] Policy Version",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ]
                    },
                    "ci_path": null,
                    "check_type": "powershell",
                    "powershell": {
                        "query": "echo \"20170925-1\";",
                        "description": "[PCI: Server-Hardening] Policy Version"
                    },
                    "description": "[PCI: Server-Hardening] Policy Version"
                }
            ]
        }
    ],
    "scan_options": {
        "powershell_queries": [
            {
                "description": "17.3.1 Ensure 'Audit PNP Activity' is set to 'Success'",
                "query": "$APolicySetting=\"Plug and Play\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.3.2 Ensure 'Audit Process Creation' is set to 'Success'",
                "query": "$APolicySetting=\"Process Creation\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.2.4 Ensure 'Audit Other Account Management Events' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Other Account Management Events\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.5.1 Ensure 'Audit Account Lockout' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Account Lockout\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.2.2 Ensure 'Audit Computer Account Management' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Computer Account Management\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.2.6 Ensure 'Audit User Account Management' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"User Account Management\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.5.2 (L1) Ensure 'Audit Group Membership' is set to 'Success'",
                "query": "$APolicySetting=\"Group Membership\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.5.3 (L1) Ensure 'Audit Logoff' is set to 'Success'",
                "query": "$APolicySetting=\"Logoff \";  $APolicyOutput= (Invoke-Expression \"auditpol /get /subcategory:$APolicySetting\") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.5.4 (L1) Ensure 'Audit Logon' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Logon \";  $APolicyOutput= (Invoke-Expression \"auditpol /get /subcategory:$APolicySetting\") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.2.3 Ensure 'Audit Distribution Group Management' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Distribution Group Management\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.2.5 Ensure 'Audit Security Group Management' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Security Group Management\"; $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting; $obj = New-Object psobject; if ($APolicyOutput){ $APolicyOutput -match ' ([a-z, /-]+) ([a-z, ]+)' | Out-Null; $APolicyStatus= $Matches[2]; $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus; } else { $obj | add-member -Type Noteproperty -Name $APolicySetting -Value \"Setting does not exists\";} $obj;"
            },
            {
                "description": "17.5.5 (L1) Ensure 'Audit Other Logon/Logoff Events' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Other Logon/Logoff Events\"; $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting; $obj = New-Object psobject; if ($APolicyOutput){ $APolicyOutput -match ' ([a-z, /-]+) ([a-z, ]+)' | Out-Null; $APolicyStatus= $Matches[2]; $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus; } else { $obj | add-member -Type Noteproperty -Name $APolicySetting -Value \"Setting does not exists\";} $obj;"
            },
            {
                "description": "17.7.1 Ensure 'Audit Audit Policy Change' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Policy Change\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.7.2 Ensure 'Audit Authentication Policy Change' is set to 'Success'",
                "query": "$APolicySetting=\"Authentication Policy Change\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.4.1 Ensure 'Audit Directory Service Access' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Directory Service Access\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "17.6.1 Ensure 'Audit Removable Storage' is set to 'Success and Failure'",
                "query": "$APolicySetting=\"Removable Storage\";  $APolicyOutput= (Invoke-Expression \"auditpol /get /category:* \") | Select-String $APolicySetting;  $obj = New-Object psobject;   if ($APolicyOutput){      $APolicyOutput -match '  ([a-z, /-]+)  ([a-z, ]+)' | Out-Null;     $APolicyStatus= $Matches[2];     $obj | add-member -Type NoteProperty -Name $APolicySetting -Value $APolicyStatus;      }          else { $obj | add-member -Type Noteproperty -Name $APolicySetting  -Value \"Setting does not exists\";}      $obj;"
            },
            {
                "description": "[PCI: Server-Hardening] Policy Version",
                "query": "echo \"20170925-1\";"
            }
        ]
    }
}