{
    "policy": {
        "name": "pci_32_password_check_--_windows",
        "short_description": "PCI 3.2 Password Check -- Windows",
        "description": "",
        "settings": {
            "tests": {
                "output_format": null
            }
        },
        "operating_system_family_id": 1,
        "operating_system_id": 125,
        "type": null
    },
    "data": [
        {
            "8.1.4 Find And Remove/Disable Inactive User Accounts Within 90 Days.": [
                {
                    "id": "8-1-4-Find-And-Remove-Disable-Inactive-User-Accounts-Within-90-Days-PCI-Use-ADSI-to-find-last-login-date-should-have-the-defined-properties",
                    "name": "PCI: Use ADSI to find last login date should have the defined properties",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "InActiveAccounts": [
                            {
                                "check": "equals",
                                "expected": "0",
                                "valueSelectList": [
                                    "0"
                                ],
                                "attributeSelectList": [
                                    "InActiveAccounts"
                                ],
                                "availableAttributes": [
                                    {
                                        "InActiveAccounts": "0"
                                    }
                                ]
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "PCI: Use ADSI to find last login date"
                    ],
                    "check_type": "other",
                    "path_error": "",
                    "selectList": [
                        "{\"InActiveAccounts\":\"0\"}",
                        "*"
                    ],
                    "description": "PCI: Use ADSI to find last login date should have the defined properties",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "8.1.6 Limit Repeated Access Attempts By Locking Out The User ID After Not More Than Six Attempts.": [
                {
                    "id": "8-1-6-Limit-Repeated-Access-Attempts-By-Locking-Out-The-User-ID-After-Not-More-Than-Six-Attempts-PCI-Parse-Lockout-threshold-from-net-accounts-command-should-have-the-defined-properties",
                    "name": "PCI: Parse Lockout threshold from net accounts command should have the defined properties",
                    "error": false,
                    "checks": {
                        "Value": [
                            {
                                "cond": [
                                    {
                                        "op": "<=",
                                        "val": "30"
                                    }
                                ],
                                "check": "conditional",
                                "valueSelectList": [
                                    "30"
                                ],
                                "attributeSelectList": [
                                    "Value"
                                ],
                                "availableAttributes": [
                                    {
                                        "Value": "30"
                                    }
                                ]
                            }
                        ],
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "PCI: Parse Lockout threshold from net accounts command"
                    ],
                    "check_type": "other",
                    "path_error": "",
                    "selectList": [
                        "{\"Value\":\"31\"}",
                        "*"
                    ],
                    "description": "PCI: Parse Lockout threshold from net accounts command should have the defined properties",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "8.1.8 If A Session Has Been Idle For More Than 15 Minutes, Require The User To Re-Authenticate To Re-Activate The Terminal Or Session.": [
                {
                    "id": "8-1-8-If-A-Session-Has-Been-Idle-For-More-Than-15-Minutes-Require-The-User-To-Re-Authenticate-To-Re-Activate-The-Terminal-Or-Session-PCI-Check-Session-Idle-Timeout-is-15-minutes-or-less",
                    "name": "PCI: Check Session Idle Timeout is 15 minutes or less",
                    "error": false,
                    "checks": {
                        "Value": [
                            {
                                "exp": "missing",
                                "check": "excludes",
                                "expected": "missing",
                                "absent_pass": true
                            }
                        ],
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "MaxIdleTime": [
                            {
                                "cond": [
                                    {
                                        "op": "<=",
                                        "val": "56250"
                                    }
                                ],
                                "check": "conditional",
                                "valueSelectList": [
                                    "56250"
                                ],
                                "attributeSelectList": [
                                    "MaxIdleTime"
                                ],
                                "availableAttributes": [
                                    {
                                        "MaxIdleTime": "56250"
                                    }
                                ]
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "PCI: Check Session Idle Timeout is 15 minutes or less"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "$Value=\"missing\"; Try{ $Value= (Get-ItemProperty -Path 'HKLM:\\\\SOFTWARE\\Policies\\Microsoft\\ Windows NT\\Terminal Services' -Name MaxIdleTime -ErrorAction Stop) | Select -expandproperty MaxIdleTime } Catch { }; $Value;"
                    },
                    "description": "PCI: Check Session Idle Timeout is 15 minutes or less",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "8.2.3 Passwords/Passphrases Must Meet Strong Requirements": [
                {
                    "id": "8-2-3-Passwords-Passphrases-Must-Meet-Strong-RequirementsPCI-Use-secedit-exe-command-to-obtain-PasswordComplexity-value-should-have-the-defined-properties",
                    "name": "PCI: Use secedit.exe command to obtain PasswordComplexity value should have the defined properties",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "PasswordComplexity": [
                            {
                                "check": "equals",
                                "expected": "1",
                                "valueSelectList": [
                                    "1"
                                ],
                                "attributeSelectList": [
                                    "PasswordComplexity"
                                ],
                                "availableAttributes": [
                                    {
                                        "PasswordComplexity": "1"
                                    }
                                ]
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "PCI: Use secedit.exe command to obtain PasswordComplexity value"
                    ],
                    "check_type": "other",
                    "path_error": "",
                    "selectList": [
                        "{\"PasswordComplexity\":\"1\"}",
                        "*"
                    ],
                    "description": "PCI: Use secedit.exe command to obtain PasswordComplexity value should have the defined properties",
                    "nodeGroupsOpen": true
                },
                {
                    "id": "8-2-3-Passwords-Passphrases-Must-Meet-Strong-RequirementsPCI-Parse-Minimum-Password-Length-from-net-accounts-command-should-have-the-defined-properties",
                    "name": "PCI: Parse Minimum Password Length from net accounts command should have the defined properties",
                    "error": false,
                    "checks": {
                        "Value": [
                            {
                                "cond": [
                                    {
                                        "op": ">=",
                                        "val": "7"
                                    }
                                ],
                                "check": "conditional",
                                "valueSelectList": null,
                                "attributeSelectList": null,
                                "availableAttributes": null
                            }
                        ],
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "PCI: Parse Minimum Password Length from net accounts command"
                    ],
                    "check_type": "other",
                    "path_error": "",
                    "selectList": [
                        "{\"Value\":\"7\"}",
                        "*"
                    ],
                    "description": "PCI: Parse Minimum Password Length from net accounts command should have the defined properties",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "8.2.4 Change User Passwords/Passphrases At Least Once Every 90 Days.": [
                {
                    "id": "8-2-4-Change-User-Passwords-Passphrases-At-Least-Once-Every-90-Days-PCI-Parse-Maximum-Password-age-from-net-accounts-command-should-have-the-defined-properties",
                    "name": "PCI: Parse Maximum Password age from net accounts command should have the defined properties",
                    "error": false,
                    "checks": {
                        "Value": [
                            {
                                "cond": [
                                    {
                                        "op": "<=",
                                        "val": "90"
                                    }
                                ],
                                "check": "conditional",
                                "valueSelectList": [
                                    "42"
                                ],
                                "attributeSelectList": [
                                    "Value"
                                ],
                                "availableAttributes": [
                                    {
                                        "Value": "42"
                                    }
                                ]
                            }
                        ],
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "PCI: Parse Maximum Password age from net accounts command"
                    ],
                    "check_type": "other",
                    "path_error": "",
                    "selectList": [
                        "{\"Value\":\"89\"}",
                        "*"
                    ],
                    "description": "PCI: Parse Maximum Password age from net accounts command should have the defined properties",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "8.2.5 Do Not Allow An Individual To Submit A New Password/Passphrase That Is The Same As Any Of The Last Four Passwords/Passphrases He Or She Has Used.": [
                {
                    "id": "8-2-5-Do-Not-Allow-An-Individual-To-Submit-A-New-Password-Passphrase-That-Is-The-Same-As-Any-Of-The-Last-Four-Passwords-Passphrases-He-Or-She-Has-Used-PCI-Use-secedit-exe-command-to-obtain-PasswordHistorySize-value",
                    "name": "PCI: Use secedit.exe command to obtain PasswordHistorySize value",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ],
                        "PasswordHistorySize": [
                            {
                                "cond": [
                                    {
                                        "op": "<=",
                                        "val": "4"
                                    },
                                    {
                                        "op": ">",
                                        "val": "0"
                                    }
                                ],
                                "check": "conditional"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "PCI: Use secedit.exe command to obtain PasswordHistorySize value"
                    ],
                    "check_type": "other",
                    "path_error": "",
                    "selectList": [
                        "{\"PasswordHistorySize\":\"24\"}",
                        "*"
                    ],
                    "description": "PCI: Use secedit.exe command to obtain PasswordHistorySize value",
                    "nodeGroupsOpen": true
                }
            ]
        },
        {
            "Version": [
                {
                    "name": "PCI: Policy Version",
                    "error": false,
                    "checks": {
                        "present": [
                            {
                                "check": "equals",
                                "expected": "true"
                            }
                        ]
                    },
                    "ci_path": [
                        "PowerShell",
                        "Queries",
                        "PCI: Policy Version"
                    ],
                    "check_type": "powershell",
                    "powershell": {
                        "query": "echo \"20170920-1\";"
                    },
                    "description": "PCI: Policy Version"
                }
            ]
        }
    ],
    "scan_options": {
        "powershell_queries": [
            {
                "description": null,
                "query": "$Value=\"missing\"; Try{ $Value= (Get-ItemProperty -Path 'HKLM:\\\\SOFTWARE\\Policies\\Microsoft\\ Windows NT\\Terminal Services' -Name MaxIdleTime -ErrorAction Stop) | Select -expandproperty MaxIdleTime } Catch { }; $Value;"
            },
            {
                "description": null,
                "query": "echo \"20170920-1\";"
            }
        ]
    }
}